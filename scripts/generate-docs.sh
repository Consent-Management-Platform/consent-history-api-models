#!/usr/bin/env bash
#
# This script generates ReDoc API documentation
# based on this package's OpenAPI spec.
#
# Pre-requisites:
# 1. yq has been installed, ref: https://github.com/mikefarah/yq
#    - eg. On Linux using snap: `snap install yq`
#    - eg. On Windows using winget: `winget install --id MikeFarah.yq`
# 2. redoc-cli has been installed, ref: https://github.com/Redocly/redoc
#    - eg. `npm install -g redoc-cli`
# 3. OpenAPI JSON spec has been pre-generated by a Gradle build
#    - eg. `./gradlew clean build` to start from a clean Gradle cache
set -e

# Validate prerequisites installed
if ! command -v yq &> /dev/null
then
    echo "Failed to convert OpenAPI spec from JSON to YAML since yq was not installed"
    exit 1
fi

if ! command -v redoc-cli &> /dev/null
then
    echo "Failed to generate ReDoc API documentation since redoc-cli was not installed"
    exit 1
fi

# Locate absolute path of script directory, even if symlinks are used
# Ref: https://thelinuxcode.com/find-directory-bash-script-located/
SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
OPENAPI_JSON_FILEPATH="$SCRIPT_DIR/../build/smithyprojections/consent-management-api-models/source/openapi/ConsentManagementApi.openapi.json"

# Validate OpenAPI JSON spec exists
if [ ! -f "$OPENAPI_JSON_FILEPATH" ]; then
    echo "Failed to generate API documentation since API spec was not found at $OPENAPI_JSON_FILEPATH"
    exit 1
fi

# Generate OpenAPI YAML spec from the existing JSON
OPENAPI_YAML_DIRECTORY="$SCRIPT_DIR/../build/openapi"
OPENAPI_YAML_FILENAME="ConsentManagementApi.openapi.yaml"
mkdir -p $OPENAPI_YAML_DIRECTORY
yq eval \
    -P $OPENAPI_JSON_FILEPATH \
    -o yaml > "$OPENAPI_YAML_DIRECTORY/$OPENAPI_YAML_FILENAME"

# Generate ReDoc API documentation from the OpenAPI YAML spec
cd $OPENAPI_YAML_DIRECTORY
redoc-cli bundle $OPENAPI_YAML_FILENAME -o ConsentManagementApi.openapi.redoc.html
